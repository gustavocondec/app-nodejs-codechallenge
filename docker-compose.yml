version: "3.7"
name: app-nodejs-codechallenge-gus-con
services:
  gateway-gql-gc:
    depends_on: [ transactions-service-gc,zookeeper,kafka, postgres ]
    build:
      context: ./gateway-gql
    volumes:
      - ./gateway-gql/src:/app/src
      # - ./gateway-gql/node_modules:/app/node_modules
    environment:
      PORT: 3001
      TRANSACTIONS_SERVER: transactions-service-gc
    ports:
      - "3001:3001"
  antifraud-service-gc:
    depends_on: [zookeeper,kafka, postgres]
    build:
      context: ./antifraud
    volumes:
      - ./antifraud/src:/app/src
      #- ./antifraud/node_modules:/app/node_modules
    environment:
      PORT: 3002
      KAFKA_SERVER: kafka:29092
  transactions-service-gc:
    depends_on: [zookeeper, kafka ,postgres]
    build:
      context: ./transactions
    volumes:
      - ./transactions/src:/app/src
    #ports:
    # - "3000:3000"
    environment:
      DB_NAME: db_yape
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      KAFKA_SERVER: kafka:29092
      PORT: 3000
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - "9092:9092"
